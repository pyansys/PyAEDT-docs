
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "examples\06-Multiphysics\Hfss_Mechanical.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_examples_06-Multiphysics_Hfss_Mechanical.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_examples_06-Multiphysics_Hfss_Mechanical.py:


Multiphysics: HFSS-Mechanical multiphysics analysis
---------------------------------------------------
This example shows how to use PyAEDT to create a multiphysics workflow that includes Circuit, HFSS, and Mechanical.

.. GENERATED FROM PYTHON SOURCE LINES 8-11

Perform required imports
~~~~~~~~~~~~~~~~~~~~~~~~
Perform required imports.

.. GENERATED FROM PYTHON SOURCE LINES 11-20

.. code-block:: default


    import tempfile
    import os
    import shutil

    from pyaedt import examples, generate_unique_name
    from pyaedt import Hfss, Circuit, Mechanical









.. GENERATED FROM PYTHON SOURCE LINES 21-24

Set non-graphical mode
~~~~~~~~~~~~~~~~~~~~~~
Set non-graphical mode. The default is ``False``.

.. GENERATED FROM PYTHON SOURCE LINES 24-27

.. code-block:: default


    non_graphical = os.getenv("PYAEDT_NON_GRAPHICAL", "False").lower() in ("true", "1", "t")








.. GENERATED FROM PYTHON SOURCE LINES 28-31

Download and open project
~~~~~~~~~~~~~~~~~~~~~~~~~
Download and open the project. Save it to the temporary folder.

.. GENERATED FROM PYTHON SOURCE LINES 31-41

.. code-block:: default


    project_full_name = examples.download_via_wizard()
    tmpfold = tempfile.gettempdir()
    temp_folder = os.path.join(tmpfold, generate_unique_name("Example"))
    project_temp_name = os.path.join(temp_folder, "via_wizard.aedt")
    if not os.path.exists(temp_folder):
        os.makedirs(temp_folder)
    shutil.copy2(project_full_name, project_temp_name)






.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    'D:\\Temp\\Example_RWA6FO\\via_wizard.aedt'



.. GENERATED FROM PYTHON SOURCE LINES 42-45

Start HFSS
~~~~~~~~~~
Start HFSS and initialize the PyAEDT object.

.. GENERATED FROM PYTHON SOURCE LINES 45-50

.. code-block:: default


    version = "2022.2"
    hfss = Hfss(project_temp_name, specified_version=version, non_graphical=non_graphical)
    pin_names = hfss.excitations





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    pyaedt info: Logger Started
    pyaedt info: Launching PyAEDT outside AEDT with CPython and PythonNET.
    pyaedt info: AEDT installation Path C:\Program Files\AnsysEM\v222\Win64.
    pyaedt info: Launching AEDT with module PythonNET.
    pyaedt info: Ansoft.ElectronicsDesktop.2022.2 Started with process ID 11624.
    pyaedt info: Logger file D:\Temp\pyaedt20220722_091734.log in use.
    pyaedt info: pyaedt v0.5.9
    pyaedt info: Python version 3.8.10 (tags/v3.8.10:3d8993a, May  3 2021, 11:48:03) [MSC v.1928 64 bit (AMD64)]
    pyaedt info: Project via_wizard has been opened.
    pyaedt info: Active Design set to HFSSDesign1
    pyaedt info: Aedt Objects initialized
    pyaedt info: Variable Manager initialized
    pyaedt info: Design Loaded
    pyaedt info: Successfully loaded project materials !
    pyaedt info: Materials Loaded
    pyaedt info: aedt file load time 0.09381937980651855




.. GENERATED FROM PYTHON SOURCE LINES 51-54

Start Circuit
~~~~~~~~~~~~~~
Start Circuit and add the HFSS dynamic link component to it.

.. GENERATED FROM PYTHON SOURCE LINES 54-58

.. code-block:: default


    circuit = Circuit()
    hfss_comp = circuit.modeler.schematic.add_subcircuit_dynamic_link(hfss)





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    pyaedt info: No project is defined. Project via_wizard exists and has been read.
    pyaedt info: No consistent unique design is present. Inserting a new design.
    pyaedt info: Added design 'Circuit Design_756' of type Circuit Design.
    pyaedt info: Aedt Objects initialized
    pyaedt info: Variable Manager initialized
    pyaedt info: Design Loaded
    pyaedt info: Successfully loaded project materials !
    pyaedt info: Materials Loaded
    pyaedt info: aedt file load time 0.09378242492675781




.. GENERATED FROM PYTHON SOURCE LINES 59-63

Set up dynamic link options
~~~~~~~~~~~~~~~~~~~~~~~~~~~
Set up the dynamic link options. The argument for ``set_sim_option_on_hfss_subcircuit``
can be the component name, component ID, or component object.

.. GENERATED FROM PYTHON SOURCE LINES 63-69

.. code-block:: default


    circuit.modeler.schematic.refresh_dynamic_link(hfss_comp.composed_name)
    circuit.modeler.schematic.set_sim_option_on_hfss_subcircuit(hfss_comp)
    hfss_setup_name = hfss.setups[0].name + " : " + hfss.setups[0].sweeps[0].name
    circuit.modeler.schematic.set_sim_solution_on_hfss_subcircuit(hfss_comp.composed_name, hfss_setup_name)





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    True



.. GENERATED FROM PYTHON SOURCE LINES 70-74

Create ports and excitations
~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Create ports and excitations. Find component pin locations and create interface
ports on them. Define the voltage source on the input port.

.. GENERATED FROM PYTHON SOURCE LINES 74-95

.. code-block:: default



    circuit.modeler.schematic.create_interface_port(
        "Excitation_1", [hfss_comp.pins[0].location[0], hfss_comp.pins[0].location[1]]
    )
    circuit.modeler.schematic.create_interface_port(
        "Excitation_2", [hfss_comp.pins[1].location[0], hfss_comp.pins[1].location[1]]
    )
    circuit.modeler.schematic.create_interface_port(
        "Port_1", [hfss_comp.pins[2].location[0], hfss_comp.pins[2].location[1]]
    )
    circuit.modeler.schematic.create_interface_port(
        "Port_2", [hfss_comp.pins[3].location[0], hfss_comp.pins[3].location[1]]
    )

    voltage = 1
    phase = 0
    excitation_settings = [str(voltage) + " V", str(phase) + " deg", "0V", "0V", "0V", "1GHz", "0s", "0", "0deg", "0Hz"]
    ports_list = ["Excitation_1", "Excitation_2"]
    circuit.assign_voltage_sinusoidal_excitation_to_ports(ports_list, excitation_settings)





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    pyaedt info: Voltage Source updated correctly.

    True



.. GENERATED FROM PYTHON SOURCE LINES 96-99

Create setup
~~~~~~~~~~~~~~
Create a setup.

.. GENERATED FROM PYTHON SOURCE LINES 99-109

.. code-block:: default


    setup_name = "MySetup"
    LNA_setup = circuit.create_setup(setupname=setup_name)
    bw_start = 4.3
    bw_stop = 4.4
    n_points = 1001
    unit = "GHz"
    sweep_list = ["LINC", str(bw_start) + unit, str(bw_stop) + unit, str(n_points)]
    LNA_setup.props["SweepDefinition"]["Data"] = " ".join(sweep_list)








.. GENERATED FROM PYTHON SOURCE LINES 110-114

Solve and push excitations
~~~~~~~~~~~~~~~~~~~~~~~~~~~
Solve the circuit and push excitations to the HFSS model to calculate the
correct value of losses.

.. GENERATED FROM PYTHON SOURCE LINES 114-120

.. code-block:: default


    circuit.analyze_nominal()

    circuit.push_excitations(instance_name="S1", setup_name=setup_name)






.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    pyaedt info: Solving design setup MySetup
    pyaedt info: Design setup MySetup solved correctly

    True



.. GENERATED FROM PYTHON SOURCE LINES 121-124

Start Mechanical
~~~~~~~~~~~~~~~~~
Start Mechanical and copy bodies from the HFSS project.

.. GENERATED FROM PYTHON SOURCE LINES 124-129

.. code-block:: default


    mech = Mechanical()
    mech.copy_solid_bodies_from(hfss)






.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    pyaedt info: No project is defined. Project via_wizard exists and has been read.
    pyaedt info: No consistent unique design is present. Inserting a new design.
    pyaedt info: Added design 'Mechanical_85I' of type Mechanical.
    pyaedt info: Aedt Objects initialized
    pyaedt info: Variable Manager initialized
    pyaedt info: Design Loaded
    pyaedt info: Successfully loaded project materials !
    pyaedt info: Materials Loaded
    pyaedt info: aedt file load time 0.0937654972076416

    True



.. GENERATED FROM PYTHON SOURCE LINES 130-133

Get losses from HFSS and assign convection to Mechanical
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Get losses from HFSS and assign the convection to Mechanical.

.. GENERATED FROM PYTHON SOURCE LINES 133-147

.. code-block:: default



    mech.assign_em_losses(
        hfss.design_name,
        hfss.setups[0].name,
        "LastAdaptive",
        hfss.setups[0].props["Frequency"],
        surface_objects=hfss.get_all_conductors_names(),
    )
    diels = ["1_pd", "2_pd", "3_pd", "4_pd", "5_pd"]
    for el in diels:
        mech.assign_uniform_convection([mech.modeler[el].top_face_y, mech.modeler[el].bottom_face_y], 3)






.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    pyaedt info: Mapping HFSS EM Lossess
    pyaedt info: EM losses mapped from design HFSSDesign1.




.. GENERATED FROM PYTHON SOURCE LINES 148-151

Plot model
~~~~~~~~~~
Plot the model.

.. GENERATED FROM PYTHON SOURCE LINES 151-154

.. code-block:: default


    mech.plot(show=False, export_path=os.path.join(mech.working_directory, "Mech.jpg"), plot_air_objects=False)




.. image-sg:: /examples/06-Multiphysics/images/sphx_glr_Hfss_Mechanical_001.png
   :alt: Hfss Mechanical
   :srcset: /examples/06-Multiphysics/images/sphx_glr_Hfss_Mechanical_001.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    <pyaedt.generic.plot.ModelPlotter object at 0x0000018292127A00>



.. GENERATED FROM PYTHON SOURCE LINES 155-158

Solve and plot thermal results
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Solve and plot the thermal results.

.. GENERATED FROM PYTHON SOURCE LINES 158-168

.. code-block:: default


    mech.create_setup()
    mech.save_project()
    mech.analyze_nominal()
    surfaces = []
    for name in mech.get_all_conductors_names():
        surfaces.extend(mech.modeler.get_object_faces(name))
    mech.post.create_fieldplot_surface(surfaces, "Temperature")






.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    pyaedt info: Project via_wizard Saved correctly
    pyaedt info: Solving design setup MySetupAuto
    pyaedt info: Design setup MySetupAuto solved correctly

    <pyaedt.modules.solutions.FieldPlot object at 0x000001829745A2E0>



.. GENERATED FROM PYTHON SOURCE LINES 169-172

Release AEDT
~~~~~~~~~~~~
Release AEDT.

.. GENERATED FROM PYTHON SOURCE LINES 172-174

.. code-block:: default


    mech.release_desktop(True, True)




.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    True




.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 3 minutes  24.672 seconds)


.. _sphx_glr_download_examples_06-Multiphysics_Hfss_Mechanical.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: Hfss_Mechanical.py <Hfss_Mechanical.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: Hfss_Mechanical.ipynb <Hfss_Mechanical.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
