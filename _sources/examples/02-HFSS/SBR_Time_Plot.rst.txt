
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "examples\02-HFSS\SBR_Time_Plot.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_examples_02-HFSS_SBR_Time_Plot.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_examples_02-HFSS_SBR_Time_Plot.py:


SBR+: HFSS to SBR+ time animation
---------------------------------
This example shows how you can use PyAEDT to create an SBR+ time animation
and save it to a GIF file. This example works only on CPython.

.. GENERATED FROM PYTHON SOURCE LINES 9-12

Import packages
~~~~~~~~~~~~~~~
Import the packages.

.. GENERATED FROM PYTHON SOURCE LINES 12-16

.. code-block:: default


    import os
    from pyaedt import Hfss, examples








.. GENERATED FROM PYTHON SOURCE LINES 17-20

Set non-graphical mode
~~~~~~~~~~~~~~~~~~~~~~
Set non-graphical mode. The default is ``False``.

.. GENERATED FROM PYTHON SOURCE LINES 20-24

.. code-block:: default


    non_graphical = os.getenv("PYAEDT_NON_GRAPHICAL", "False").lower() in ("true", "1", "t")









.. GENERATED FROM PYTHON SOURCE LINES 25-28

Launch AEDT and load project
~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Launch AEDT and load the project.

.. GENERATED FROM PYTHON SOURCE LINES 28-35

.. code-block:: default


    project_file = examples.download_sbr_time()

    hfss = Hfss(project_file, specified_version="2022.2", non_graphical=non_graphical, new_desktop_session=True)

    hfss.analyze_nominal()





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    pyaedt info: Logger Started
    pyaedt info: Launching PyAEDT outside AEDT with CPython and PythonNET.
    pyaedt info: AEDT installation Path C:\Program Files\AnsysEM\v222\Win64.
    pyaedt info: Launching AEDT with module PythonNET.
    pyaedt info: Ansoft.ElectronicsDesktop.2022.2 Started with process ID 12884.
    pyaedt info: Logger file D:\Temp\pyaedt20220722_091734.log in use.
    pyaedt info: pyaedt v0.5.9
    pyaedt info: Python version 3.8.10 (tags/v3.8.10:3d8993a, May  3 2021, 11:48:03) [MSC v.1928 64 bit (AMD64)]
    pyaedt info: Project poc_scat_small has been opened.
    pyaedt info: Active Design set to HFSSDesign1
    pyaedt info: Aedt Objects initialized
    pyaedt info: Variable Manager initialized
    pyaedt info: Design Loaded
    pyaedt info: Successfully loaded project materials !
    pyaedt info: Materials Loaded
    pyaedt info: aedt file load time 0.04687666893005371
    pyaedt info: Solving design setup Setup1
    pyaedt info: Design setup Setup1 solved correctly

    True



.. GENERATED FROM PYTHON SOURCE LINES 36-40

Get solution data
~~~~~~~~~~~~~~~~~
Get solution data. After simulation is performed, you can load solutions
in ``solution_data``.

.. GENERATED FROM PYTHON SOURCE LINES 40-46

.. code-block:: default


    solution_data = hfss.post.get_solution_data(expressions=["NearEX", "NearEY", "NearEZ"],
                                                variations={"_u": ["All"], "_v": ["All"], "Freq": ["All"]},
                                                context="Near_Field",
                                                report_category="Near Fields")





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    pyaedt info: Solution Data Correctly Loaded.




.. GENERATED FROM PYTHON SOURCE LINES 47-50

Compute IFFT
~~~~~~~~~~~~
Compute IFFT (Inverse Fast Fourier Transform).

.. GENERATED FROM PYTHON SOURCE LINES 50-54

.. code-block:: default


    t_matrix = solution_data.ifft("NearE", window=True)









.. GENERATED FROM PYTHON SOURCE LINES 55-58

Export IFFT to CSV files
~~~~~~~~~~~~~~~~~~~~~~~~
Export the IFFT to CSV files.

.. GENERATED FROM PYTHON SOURCE LINES 58-62

.. code-block:: default


    frames_list_file = solution_data.ifft_to_file(coord_system_center=[-0.15, 0, 0], db_val=True,
                                                  csv_dir=os.path.join(hfss.working_directory, "csv"))








.. GENERATED FROM PYTHON SOURCE LINES 63-66

Plot scene
~~~~~~~~~~
Plot the scene to create the time plot animation.

.. GENERATED FROM PYTHON SOURCE LINES 66-74

.. code-block:: default


    hfss.post.plot_scene(frames_list_file, os.path.join(hfss.working_directory, "animation.gif"), norm_index=15, dy_rng=35,
                         show=False)


    hfss.release_desktop()





.. image-sg:: /examples/02-HFSS/images/sphx_glr_SBR_Time_Plot_001.png
   :alt: SBR Time Plot
   :srcset: /examples/02-HFSS/images/sphx_glr_SBR_Time_Plot_001.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    True




.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 1 minutes  29.863 seconds)


.. _sphx_glr_download_examples_02-HFSS_SBR_Time_Plot.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: SBR_Time_Plot.py <SBR_Time_Plot.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: SBR_Time_Plot.ipynb <SBR_Time_Plot.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
