
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "examples\02-HFSS\SBR_Doppler_Example.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_examples_02-HFSS_SBR_Doppler_Example.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_examples_02-HFSS_SBR_Doppler_Example.py:


SBR+: doppler setup
-------------------
This example shows how you can use PyAEDT to create a multipart scenario in SBR+ and setup a doppler Analysis.

.. GENERATED FROM PYTHON SOURCE LINES 8-11

Perform required imports
~~~~~~~~~~~~~~~~~~~~~~~~
Perform required imports.

.. GENERATED FROM PYTHON SOURCE LINES 11-26

.. code-block:: default


    import os
    import tempfile
    import pyaedt
    from pyaedt import examples, generate_unique_name

    # Launch AEDT
    # ~~~~~~~~~~~
    # Launch AEDT.

    aedt_version = "2022.2"
    projectname = "MicroDoppler_with_ADP"
    designname = "doppler"
    library_path = examples.download_multiparts()








.. GENERATED FROM PYTHON SOURCE LINES 27-30

Set non-graphical mode
~~~~~~~~~~~~~~~~~~~~~~
Set non-graphical mode. The default is ``False``.

.. GENERATED FROM PYTHON SOURCE LINES 30-33

.. code-block:: default


    non_graphical = os.getenv("PYAEDT_NON_GRAPHICAL", "False").lower() in ("true", "1", "t")








.. GENERATED FROM PYTHON SOURCE LINES 34-37

Open project
~~~~~~~~~~~~
Download the project, open it, and save it to the temporary folder.

.. GENERATED FROM PYTHON SOURCE LINES 37-58

.. code-block:: default


    tmpfold = tempfile.gettempdir()


    temp_folder = os.path.join(tmpfold, generate_unique_name("Example"))
    if not os.path.exists(temp_folder):
        os.makedirs(temp_folder)

    # Instantiate the application.
    app = pyaedt.Hfss(
        specified_version=aedt_version,
        solution_type="SBR+",
        new_desktop_session=True,
        projectname=projectname,
        close_on_exit=True,
        non_graphical=non_graphical
    )


    app.autosave_disable()





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    pyaedt info: Logger Started
    pyaedt info: Launching PyAEDT outside AEDT with CPython and PythonNET.
    pyaedt info: AEDT installation Path C:\Program Files\AnsysEM\v222\Win64.
    pyaedt info: Launching AEDT with module PythonNET.
    pyaedt info: Ansoft.ElectronicsDesktop.2022.2 Started with process ID 5880.
    pyaedt info: Logger file D:\Temp\pyaedt20220722_091734.log in use.
    pyaedt info: pyaedt v0.5.9
    pyaedt info: Python version 3.8.10 (tags/v3.8.10:3d8993a, May  3 2021, 11:48:03) [MSC v.1928 64 bit (AMD64)]
    pyaedt info: Project MicroDoppler_with_ADP has been created.
    pyaedt info: No design is present. Inserting a new design.
    pyaedt info: Added design 'HFSS_2YI' of type HFSS.
    pyaedt info: Aedt Objects initialized
    pyaedt info: Variable Manager initialized
    pyaedt info: Design Loaded
    pyaedt info: Successfully loaded project materials !
    pyaedt info: Materials Loaded
    pyaedt info: aedt file load time 0.0

    True



.. GENERATED FROM PYTHON SOURCE LINES 59-62

Create design
~~~~~~~~~~~~~
Save the project and rename the design.

.. GENERATED FROM PYTHON SOURCE LINES 62-67

.. code-block:: default


    app.save_project(project_file=os.path.join(temp_folder, projectname + ".aedt"))
    app.rename_design(designname)






.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    pyaedt info: Project MicroDoppler_with_ADP Saved correctly

    True



.. GENERATED FROM PYTHON SOURCE LINES 68-71

Set up library paths
~~~~~~~~~~~~~~~~~~~~
Set up library paths to 3D components.

.. GENERATED FROM PYTHON SOURCE LINES 71-81

.. code-block:: default


    actor_lib = os.path.join(library_path, "actor_library")
    env_lib = os.path.join(library_path, "environment_library")
    radar_lib = os.path.join(library_path, "radar_modules")
    env_folder = os.path.join(env_lib, "road1")
    person_folder = os.path.join(actor_lib, "person3")
    car_folder = os.path.join(actor_lib, "vehicle1")
    bike_folder = os.path.join(actor_lib, "bike1")
    bird_folder = os.path.join(actor_lib, "bird1")








.. GENERATED FROM PYTHON SOURCE LINES 82-85

Define environment
~~~~~~~~~~~~~~~~~~
Define the background environment.

.. GENERATED FROM PYTHON SOURCE LINES 85-89

.. code-block:: default


    road1 = app.modeler.add_environment(env_folder=env_folder, environment_name="Bari")
    prim = app.modeler








.. GENERATED FROM PYTHON SOURCE LINES 90-93

Place actors
~~~~~~~~~~~~
Place actors in the environment. This code places persons, birds, bikes, and cars.

.. GENERATED FROM PYTHON SOURCE LINES 93-117

.. code-block:: default


    person1 = app.modeler.add_person(
        actor_folder=person_folder, speed=1.0, global_offset=[25, 1.5, 0], yaw=180, actor_name="Massimo"
    )
    person2 = app.modeler.add_person(
        actor_folder=person_folder, speed=1.0, global_offset=[25, 2.5, 0], yaw=180, actor_name="Devin"
    )
    car1 = app.modeler.add_vehicle(actor_folder=car_folder, speed=8.7, global_offset=[3, -2.5, 0], actor_name="LuxuryCar")
    bike1 = app.modeler.add_vehicle(
        actor_folder=bike_folder, speed=2.1, global_offset=[24, 3.6, 0], yaw=180, actor_name="Alberto_in_bike"
    )
    bird1 = app.modeler.add_bird(
        actor_folder=bird_folder,
        speed=1.0,
        global_offset=[19, 4, 3],
        yaw=120,
        pitch=-5,
        flapping_rate=30,
        actor_name="Pigeon",
    )
    bird2 = app.modeler.add_bird(
        actor_folder=bird_folder, speed=1.0, global_offset=[6, 2, 3], yaw=-60, pitch=10, actor_name="Eagle"
    )





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    pyaedt info: Adding person: Massimo_0
    pyaedt info: Adding person: Devin_1
    pyaedt info: Adding vehicle: LuxuryCar_0
    pyaedt info: Adding vehicle: Alberto_in_bike_0
    pyaedt info: Adding Vehicle: Pigeon_0
    pyaedt info: Adding Vehicle: Eagle_1




.. GENERATED FROM PYTHON SOURCE LINES 118-122

Place radar
~~~~~~~~~~~
Place radar on the car. The radar is created relative to the car's coordinate
system.

.. GENERATED FROM PYTHON SOURCE LINES 122-131

.. code-block:: default


    radar1 = app.create_sbr_radar_from_json(
        radar_file=radar_lib,
        radar_name="Example_1Tx_1Rx",
        offset=[2.57, 0, 0.54],
        use_relative_cs=True,
        relative_cs_name=car1.cs_name,
    )





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    pyaedt info: Adding radar module:  Example_1Tx_1Rx_0
    pyaedt info: Native component Parametric Beam Example_1Tx_1Rx_0_tx1 has been correctly created.
    pyaedt info: Native component Parametric Beam Example_1Tx_1Rx_0_rx1 has been correctly created.
    pyaedt info: Boundary SBRTxRxSettings SBRTxRxSettings has been correctly created.
    pyaedt info: Group Created:  Example_1Tx_1Rx_0




.. GENERATED FROM PYTHON SOURCE LINES 132-137

Create setup
~~~~~~~~~~~~
Create setup and validate it. The ``create_sbr_pulse_doppler_setup`` method
creates a setup and a parametric sweep on the time variable of the
duration of 2 seconds. The step is computed automatically from CPI.

.. GENERATED FROM PYTHON SOURCE LINES 137-142

.. code-block:: default


    setup, sweep = app.create_sbr_pulse_doppler_setup(sweep_time_duration=2)
    app.set_sbr_current_sources_options()
    app.validate_simple()





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    pyaedt info: SBR+ current source options correctly applied.

    1



.. GENERATED FROM PYTHON SOURCE LINES 143-146

Plot model
~~~~~~~~~~
Plot the model.

.. GENERATED FROM PYTHON SOURCE LINES 146-149

.. code-block:: default


    app.plot(show=False, export_path=os.path.join(app.working_directory, "Image.jpg"), plot_air_objects=True)




.. image-sg:: /examples/02-HFSS/images/sphx_glr_SBR_Doppler_Example_001.png
   :alt: SBR Doppler Example
   :srcset: /examples/02-HFSS/images/sphx_glr_SBR_Doppler_Example_001.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    <pyaedt.generic.plot.ModelPlotter object at 0x00000182FD85BD30>



.. GENERATED FROM PYTHON SOURCE LINES 150-154

Solve and release AEDT
~~~~~~~~~~~~~~~~~~~~~~
Solve and release AEDT. To solve, uncomment the ``app.analyze_setup`` command
to activate the simulation. 

.. GENERATED FROM PYTHON SOURCE LINES 154-158

.. code-block:: default


    # app.analyze_setup(sweep.name)
    app.save_project()
    app.release_desktop(close_projects=True, close_desktop=True)




.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    pyaedt info: Project MicroDoppler_with_ADP Saved correctly

    True




.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  38.103 seconds)


.. _sphx_glr_download_examples_02-HFSS_SBR_Doppler_Example.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: SBR_Doppler_Example.py <SBR_Doppler_Example.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: SBR_Doppler_Example.ipynb <SBR_Doppler_Example.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
