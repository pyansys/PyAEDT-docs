
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "examples\02-HFSS\HFSS3DLayout_Via.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_examples_02-HFSS_HFSS3DLayout_Via.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_examples_02-HFSS_HFSS3DLayout_Via.py:


HFSS 3D Layout: parametric via analysis
---------------------------------------
This example shows how to use HFSS 3D Layout to create and solve a parametric via analysis.

.. GENERATED FROM PYTHON SOURCE LINES 6-8

.. code-block:: default

    # sphinx_gallery_thumbnail_path = 'Resources/3dlayout.png'








.. GENERATED FROM PYTHON SOURCE LINES 9-13

Import object
~~~~~~~~~~~~~
Import the ``Hfss3dlayout`` object and initialize it on version
2022 R2.

.. GENERATED FROM PYTHON SOURCE LINES 13-17

.. code-block:: default


    from pyaedt import Hfss3dLayout
    import os








.. GENERATED FROM PYTHON SOURCE LINES 18-21

Set non-graphical mode
~~~~~~~~~~~~~~~~~~~~~~
Set non-graphical mode. The default is ``False``.

.. GENERATED FROM PYTHON SOURCE LINES 21-24

.. code-block:: default


    non_graphical = os.getenv("PYAEDT_NON_GRAPHICAL", "False").lower() in ("true", "1", "t")








.. GENERATED FROM PYTHON SOURCE LINES 25-28

Launch AEDT
~~~~~~~~~~~
Launch AEDT 2022 R2 in graphical mode.

.. GENERATED FROM PYTHON SOURCE LINES 28-31

.. code-block:: default


    h3d = Hfss3dLayout(specified_version="2022.2", new_desktop_session=True, non_graphical=non_graphical)





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    pyaedt info: Logger Started
    pyaedt info: Launching PyAEDT outside AEDT with CPython and PythonNET.
    pyaedt info: AEDT installation Path C:\Program Files\AnsysEM\v222\Win64.
    pyaedt info: Launching AEDT with module PythonNET.
    pyaedt info: Ansoft.ElectronicsDesktop.2022.2 Started with process ID 10800.
    pyaedt info: Logger file D:\Temp\pyaedt20220722_091734.log in use.
    pyaedt info: pyaedt v0.5.9
    pyaedt info: Python version 3.8.10 (tags/v3.8.10:3d8993a, May  3 2021, 11:48:03) [MSC v.1928 64 bit (AMD64)]
    pyaedt info: Project Project49 has been created.
    pyaedt info: No design is present. Inserting a new design.
    pyaedt info: Added design 'HFSS 3D Layout Design_0H2' of type HFSS 3D Layout Design.
    pyaedt info: Aedt Objects initialized
    pyaedt info: Variable Manager initialized
    pyaedt info: Design Loaded
    pyaedt info: Successfully loaded project materials !
    pyaedt info: Materials Loaded
    pyaedt info: Analysis Loaded
    pyaedt info: Loading Modeler.
    pyaedt info: Modeler loaded.
    pyaedt info: EDB loaded.
    pyaedt info: Layers loaded.
    pyaedt info: Primitives loaded.
    pyaedt info: Modeler Loaded




.. GENERATED FROM PYTHON SOURCE LINES 32-35

Set up parametric variables
~~~~~~~~~~~~~~~~~~~~~~~~~~~
Set up all parametric variables to use in the layout.

.. GENERATED FROM PYTHON SOURCE LINES 35-42

.. code-block:: default


    h3d["viatotrace"] = "5mm"
    h3d["viatovia"] = "10mm"
    h3d["w1"] = "1mm"
    h3d["sp"] = "0.5mm"
    h3d["len"] = "50mm"








.. GENERATED FROM PYTHON SOURCE LINES 43-46

Add stackup layers
~~~~~~~~~~~~~~~~~~
Add stackup layers.

.. GENERATED FROM PYTHON SOURCE LINES 46-51

.. code-block:: default


    h3d.modeler.layers.add_layer("GND", "signal", thickness="0", isnegative=True)
    h3d.modeler.layers.add_layer("diel", "dielectric", thickness="0.2mm", material="FR4_epoxy")
    h3d.modeler.layers.add_layer("TOP", "signal", thickness="0.035mm", elevation="0.2mm")





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    <pyaedt.modules.LayerStackup.Layer object at 0x00000182FC4CDCD0>



.. GENERATED FROM PYTHON SOURCE LINES 52-55

Create signal net and ground planes
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Create a signal net and ground planes.

.. GENERATED FROM PYTHON SOURCE LINES 55-60

.. code-block:: default


    h3d.modeler.create_line("TOP", [[0, 0], ["len", 0]], lw="w1", netname="microstrip", name="microstrip")
    h3d.modeler.create_rectangle("TOP", [0, "-w1/2-sp"], ["len", "-w1/2-sp-20mm"])
    h3d.modeler.create_rectangle("TOP", [0, "w1/2+sp"], ["len", "w1/2+sp+20mm"])





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    'NewObject_Q9M1U7'



.. GENERATED FROM PYTHON SOURCE LINES 61-64

Create vias
~~~~~~~~~~~
Create vias with parametric positions.

.. GENERATED FROM PYTHON SOURCE LINES 64-72

.. code-block:: default


    h3d.modeler.create_via(x="viatovia", y="-viatotrace", name="via1")
    h3d.modeler.create_via(x="viatovia", y="viatotrace", name="via2")
    h3d.modeler.create_via(x="2*viatovia", y="-viatotrace")
    h3d.modeler.create_via(x="2*viatovia", y="viatotrace")
    h3d.modeler.create_via(x="3*viatovia", y="-viatotrace")
    h3d.modeler.create_via(x="3*viatovia", y="viatotrace")





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    'NewObject_1GZBP9'



.. GENERATED FROM PYTHON SOURCE LINES 73-76

Create circuit ports
~~~~~~~~~~~~~~~~~~~~
Create circuit ports.

.. GENERATED FROM PYTHON SOURCE LINES 76-80

.. code-block:: default


    h3d.create_edge_port("microstrip", 0)
    h3d.create_edge_port("microstrip", 2)





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    'Port2'



.. GENERATED FROM PYTHON SOURCE LINES 81-84

Create setup and sweep
~~~~~~~~~~~~~~~~~~~~~~
Create a setup and a sweep.

.. GENERATED FROM PYTHON SOURCE LINES 84-100

.. code-block:: default


    setup = h3d.create_setup()
    h3d.create_linear_count_sweep(
        setupname=setup.name,
        unit="GHz",
        freqstart=3,
        freqstop=7,
        num_of_freq_points=1001,
        sweepname="sweep1",
        sweep_type="Interpolating",
        interpolation_tol_percent=1,
        interpolation_max_solutions=255,
        save_fields=False,
        use_q3d_for_dc=False,
    )





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    pyaedt info: Linear count sweep sweep1 has been correctly created.

    <pyaedt.modules.SetupTemplates.SweepHFSS3DLayout object at 0x00000182FD85B730>



.. GENERATED FROM PYTHON SOURCE LINES 101-104

Solve and plot results
~~~~~~~~~~~~~~~~~~~~~~
Solve and plot the results.

.. GENERATED FROM PYTHON SOURCE LINES 104-109

.. code-block:: default


    h3d.analyze_nominal()
    traces = h3d.get_traces_for_plot(first_element_filter="Port1")
    h3d.post.create_report(traces, families_dict=h3d.available_variations.nominal_w_values_dict)





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    pyaedt info: Solving design setup MySetupAuto
    pyaedt info: Design setup MySetupAuto solved correctly
    pyaedt error: Method create_report Failed:  Type Error. Please Check again
    Method create_report Failed:  Type Error. Please Check again
    pyaedt error: create_report() got an unexpected keyword argument 'families_dict'
    create_report() got an unexpected keyword argument 'families_dict'
    pyaedt error: Arguments Provided: 
    Arguments Provided: 
    pyaedt error:     expressions = ['dB(S(Port1,Port1))', 'dB(S(Port1,Port2))'] 
        expressions = ['dB(S(Port1,Port1))', 'dB(S(Port1,Port2))'] 
    pyaedt error:     setup_sweep_name = None 
        setup_sweep_name = None 
    pyaedt error:     domain = None 
        domain = None 
    pyaedt error:     variations = None 
        variations = None 
    pyaedt error:     primary_sweep_variable = None 
        primary_sweep_variable = None 
    pyaedt error:     secondary_sweep_variable = None 
        secondary_sweep_variable = None 
    pyaedt error:     report_category = None 
        report_category = None 
    pyaedt error:     plot_type = None 
        plot_type = None 
    pyaedt error:     context = None 
        context = None 
    pyaedt error:     subdesign_id = None 
        subdesign_id = None 
    pyaedt error:     polyline_points = None 
        polyline_points = None 
    pyaedt error:     plotname = None 
        plotname = None 
    pyaedt error:     families_dict = {'viatotrace': '5mm', 'viatovia': '10mm', 'w1': '1mm', 'sp': '0.5mm', 'len': '50mm'} 
        families_dict = {'viatotrace': '5mm', 'viatovia': '10mm', 'w1': '1mm', 'sp': '0.5mm', 'len': '50mm'} 
    pyaedt error: Check Online documentation on: https://aedtdocs.pyansys.com/search.html?q=create_report
    Check Online documentation on: https://aedtdocs.pyansys.com/search.html?q=create_report

    False



.. GENERATED FROM PYTHON SOURCE LINES 110-113

Create report outside AEDT
~~~~~~~~~~~~~~~~~~~~~~~~~~
Create report using Matplotlib.

.. GENERATED FROM PYTHON SOURCE LINES 113-120

.. code-block:: default


    traces = h3d.get_traces_for_plot(first_element_filter="Port1", category="S")

    solutions = h3d.post.get_solution_data(expressions=traces)
    solutions.plot(math_formula="db20")





.. image-sg:: /examples/02-HFSS/images/sphx_glr_HFSS3DLayout_Via_001.png
   :alt: Simulation Results Plot
   :srcset: /examples/02-HFSS/images/sphx_glr_HFSS3DLayout_Via_001.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    pyaedt info: Solution Data Correctly Loaded.

    <Figure size 2000x1000 with 1 Axes>



.. GENERATED FROM PYTHON SOURCE LINES 121-126

Close AEDT
~~~~~~~~~~
After the simulaton completes, you can close AEDT or release it using the
:func:`pyaedt.Desktop.release_desktop` method.
All methods provide for saving the project before closing.

.. GENERATED FROM PYTHON SOURCE LINES 126-129

.. code-block:: default


    if os.name != "posix":
        h3d.release_desktop()








.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 1 minutes  47.783 seconds)


.. _sphx_glr_download_examples_02-HFSS_HFSS3DLayout_Via.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: HFSS3DLayout_Via.py <HFSS3DLayout_Via.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: HFSS3DLayout_Via.ipynb <HFSS3DLayout_Via.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
