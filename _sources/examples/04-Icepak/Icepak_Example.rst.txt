
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "examples\04-Icepak\Icepak_Example.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_examples_04-Icepak_Icepak_Example.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_examples_04-Icepak_Icepak_Example.py:


Icepak: graphic card thermal analysis
-------------------------------------
This example shows how you can use PyAEDT to create a graphic card setup in Icepak and postprocess results.
The example file is an Icepak project with a model that is already created and has materials assigned.

.. GENERATED FROM PYTHON SOURCE LINES 9-12

Perform required imports
~~~~~~~~~~~~~~~~~~~~~~~~
Perform required imports.

.. GENERATED FROM PYTHON SOURCE LINES 12-19

.. code-block:: default


    import os
    import tempfile
    import shutil
    from pyaedt import examples, generate_unique_name
    from pyaedt import Icepak








.. GENERATED FROM PYTHON SOURCE LINES 20-23

Set non-graphical mode
~~~~~~~~~~~~~~~~~~~~~~
Set non-graphical mode. The default is ``False``.

.. GENERATED FROM PYTHON SOURCE LINES 23-26

.. code-block:: default


    non_graphical = os.getenv("PYAEDT_NON_GRAPHICAL", "False").lower() in ("true", "1", "t")








.. GENERATED FROM PYTHON SOURCE LINES 27-30

Download and open project
~~~~~~~~~~~~~~~~~~~~~~~~~
Download the project, open it, and save it to the temporary folder.

.. GENERATED FROM PYTHON SOURCE LINES 30-46

.. code-block:: default


    project_full_name = examples.download_icepak()

    tmpfold = tempfile.gettempdir()


    temp_folder = os.path.join(tmpfold, generate_unique_name("Example"))
    project_temp_name = os.path.join(temp_folder, "Graphic_Card.aedt")
    if not os.path.exists(temp_folder):
        os.makedirs(temp_folder)
    shutil.copy2(project_full_name, project_temp_name)

    ipk = Icepak(project_temp_name, specified_version="2022.2", new_desktop_session=True, non_graphical=non_graphical)
    ipk.save_project(os.path.join(temp_folder, "Graphics_card.aedt"))
    ipk.autosave_disable()





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    pyaedt info: Logger Started
    pyaedt info: Launching PyAEDT outside AEDT with CPython and PythonNET.
    pyaedt info: AEDT installation Path C:\Program Files\AnsysEM\v222\Win64.
    pyaedt info: Launching AEDT with module PythonNET.
    pyaedt info: Ansoft.ElectronicsDesktop.2022.2 Started with process ID 11476.
    pyaedt info: Logger file D:\Temp\pyaedt20220722_091734.log in use.
    pyaedt info: pyaedt v0.5.9
    pyaedt info: Python version 3.8.10 (tags/v3.8.10:3d8993a, May  3 2021, 11:48:03) [MSC v.1928 64 bit (AMD64)]
    pyaedt info: Project Graphic_Card has been opened.
    pyaedt info: Active Design set to IcepakDesign1
    pyaedt info: Aedt Objects initialized
    pyaedt info: Variable Manager initialized
    pyaedt info: Design Loaded
    pyaedt info: Successfully loaded project materials !
    pyaedt info: Materials Loaded
    pyaedt info: aedt file load time 0.01569390296936035
    pyaedt info: Project Graphics_card Saved correctly

    True



.. GENERATED FROM PYTHON SOURCE LINES 47-50

Plot model
~~~~~~~~~~
Plot the model.

.. GENERATED FROM PYTHON SOURCE LINES 50-53

.. code-block:: default


    ipk.plot(show=False, export_path=os.path.join(temp_folder, "Graphics_card.jpg"), plot_air_objects=False)




.. image-sg:: /examples/04-Icepak/images/sphx_glr_Icepak_Example_001.png
   :alt: Icepak Example
   :srcset: /examples/04-Icepak/images/sphx_glr_Icepak_Example_001.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    <pyaedt.generic.plot.ModelPlotter object at 0x00000182FD87B4F0>



.. GENERATED FROM PYTHON SOURCE LINES 54-57

Create source blocks
~~~~~~~~~~~~~~~~~~~~
Create source blocks on the CPU and memories.

.. GENERATED FROM PYTHON SOURCE LINES 57-61

.. code-block:: default


    ipk.create_source_block("CPU", "25W")
    ipk.create_source_block(["MEMORY1", "MEMORY1_1"], "5W")





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    pyaedt info: Block on ['CPU'] with 25W power created correctly.
    pyaedt info: Block on ['MEMORY1', 'MEMORY1_1'] with 5W power created correctly.

    <pyaedt.modules.Boundary.BoundaryObject object at 0x0000018281180F40>



.. GENERATED FROM PYTHON SOURCE LINES 62-65

Assign openings and grille
~~~~~~~~~~~~~~~~~~~~~~~~~~
Assign openings and a grille.

.. GENERATED FROM PYTHON SOURCE LINES 65-70

.. code-block:: default


    region = ipk.modeler["Region"]
    ipk.assign_openings(air_faces=region.bottom_face_x.id)
    ipk.assign_grille(air_faces=region.top_face_x.id, free_area_ratio=0.8)





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    pyaedt info: Opening Assigned
    pyaedt info: Grille Assigned

    <pyaedt.modules.Boundary.BoundaryObject object at 0x00000182940CB580>



.. GENERATED FROM PYTHON SOURCE LINES 71-74

Assign mesh regions
~~~~~~~~~~~~~~~~~~~
Assign a mesh region to the heat sink and CPU.

.. GENERATED FROM PYTHON SOURCE LINES 74-83

.. code-block:: default


    mesh_region = ipk.mesh.assign_mesh_region(objectlist=["HEAT_SINK", "CPU"])
    mesh_region.UserSpecifiedSettings = True
    mesh_region.MaxElementSizeX = "3.35mm"
    mesh_region.MaxElementSizeY = "1.75mm"
    mesh_region.MaxElementSizeZ = "2.65mm"
    mesh_region.MaxLevels = "2"
    mesh_region.update()





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    True



.. GENERATED FROM PYTHON SOURCE LINES 84-87

Assign point monitor
~~~~~~~~~~~~~~~~~~~~
Assign a point monitor and set it up.

.. GENERATED FROM PYTHON SOURCE LINES 87-97

.. code-block:: default


    ipk.assign_point_monitor(point_position=["-35mm", "3.6mm", "-86mm"], monitor_name="TemperatureMonitor1")
    ipk.assign_point_monitor(point_position=["80mm", "14.243mm", "-55mm"], monitor_type="Speed")
    setup1 = ipk.create_setup()
    setup1.props["Flow Regime"] = "Turbulent"
    setup1.props["Convergence Criteria - Max Iterations"] = 5
    setup1.props["Linear Solver Type - Pressure"] = "flex"
    setup1.props["Linear Solver Type - Temperature"] = "flex"
    ipk.save_project(r"C:\temp\Graphic_card.aedt")





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    pyaedt info: Project Graphic_card Saved correctly

    True



.. GENERATED FROM PYTHON SOURCE LINES 98-101

Solve project and postprocess
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Solve the project and plot temperatures.

.. GENERATED FROM PYTHON SOURCE LINES 101-113

.. code-block:: default


    quantity_name = "SurfTemperature"
    surflist = [i.id for i in ipk.modeler["CPU"].faces]
    surflist += [i.id for i in ipk.modeler["MEMORY1"].faces]
    surflist += [i.id for i in ipk.modeler["MEMORY1_1"].faces]
    surflist += [i.id for i in ipk.modeler["ALPHA_MAIN_PCB"].faces]

    plot5 = ipk.post.create_fieldplot_surface(surflist, "SurfTemperature")


    ipk.analyze_nominal()





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    pyaedt info: Solving design setup MySetupAuto
    pyaedt info: Design setup MySetupAuto solved correctly

    True



.. GENERATED FROM PYTHON SOURCE LINES 114-117

Release AEDT
~~~~~~~~~~~~
Release AEDT.

.. GENERATED FROM PYTHON SOURCE LINES 117-119

.. code-block:: default


    ipk.release_desktop(True, True)




.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    True




.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 2 minutes  2.337 seconds)


.. _sphx_glr_download_examples_04-Icepak_Icepak_Example.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: Icepak_Example.py <Icepak_Example.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: Icepak_Example.ipynb <Icepak_Example.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
