
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "examples\01-Modeling-Setup\HFSS_CoordinateSystem.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_examples_01-Modeling-Setup_HFSS_CoordinateSystem.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_examples_01-Modeling-Setup_HFSS_CoordinateSystem.py:


General: coordinate system creation
-----------------------------------
This example shows how you can use PyAEDT to create and modify coordinate systems in the modeler.

.. GENERATED FROM PYTHON SOURCE LINES 6-22

.. code-block:: default

    # sphinx_gallery_thumbnail_path = 'Resources/coordinate_system.png'

    import os
    import tempfile

    from pyaedt import Hfss
    from pyaedt import Desktop
    from pyaedt import generate_unique_name

    tmpfold = tempfile.gettempdir()

    temp_folder = os.path.join(tmpfold, generate_unique_name("Example"))
    if not os.path.exists(temp_folder):
        os.mkdir(temp_folder)









.. GENERATED FROM PYTHON SOURCE LINES 23-26

Set non-graphical mode
~~~~~~~~~~~~~~~~~~~~~~
Set non-graphical mode. The default is ``False``.

.. GENERATED FROM PYTHON SOURCE LINES 26-30

.. code-block:: default


    non_graphical = os.getenv("PYAEDT_NON_GRAPHICAL", "False").lower() in ("true", "1", "t")









.. GENERATED FROM PYTHON SOURCE LINES 31-34

Launch AEDT in graphical mode
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Launch AEDT 2022 R2 in graphical mode.

.. GENERATED FROM PYTHON SOURCE LINES 34-37

.. code-block:: default


    d = Desktop("2022.2", non_graphical=non_graphical, new_desktop_session=True)





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    pyaedt info: Logger Started
    pyaedt info: Launching PyAEDT outside AEDT with CPython and PythonNET.
    pyaedt info: AEDT installation Path C:\Program Files\AnsysEM\v222\Win64.
    pyaedt info: Launching AEDT with module PythonNET.
    pyaedt info: Ansoft.ElectronicsDesktop.2022.2 Started with process ID 12624.
    pyaedt info: Logger file D:\Temp\pyaedt20220722_091734.log in use.
    pyaedt info: pyaedt v0.5.9
    pyaedt info: Python version 3.8.10 (tags/v3.8.10:3d8993a, May  3 2021, 11:48:03) [MSC v.1928 64 bit (AMD64)]




.. GENERATED FROM PYTHON SOURCE LINES 38-41

Insert HFSS design
~~~~~~~~~~~~~~~~~~
Insert an HFSS design with the default name.

.. GENERATED FROM PYTHON SOURCE LINES 41-44

.. code-block:: default


    hfss = Hfss()





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    pyaedt info: Project Project49 has been created.
    pyaedt info: No design is present. Inserting a new design.
    pyaedt info: Added design 'HFSS_EX3' of type HFSS.
    pyaedt info: Aedt Objects initialized
    pyaedt info: Variable Manager initialized
    pyaedt info: Design Loaded
    pyaedt info: Successfully loaded project materials !
    pyaedt info: Materials Loaded




.. GENERATED FROM PYTHON SOURCE LINES 45-50

Create coordinate system
~~~~~~~~~~~~~~~~~~~~~~~~
The coordinate system is centered on the ``Global`` origin and has the axis
aligned to the ``Global`` coordinate system. The new coordinate system is
saved in the object ``cs1``.

.. GENERATED FROM PYTHON SOURCE LINES 50-53

.. code-block:: default


    cs1 = hfss.modeler.create_coordinate_system()








.. GENERATED FROM PYTHON SOURCE LINES 54-58

Modify coordinate system
~~~~~~~~~~~~~~~~~~~~~~~~
The ``cs1`` object exposes properties and methods to manipulate the
coordinate system. The origin can be changed.

.. GENERATED FROM PYTHON SOURCE LINES 58-70

.. code-block:: default


    cs1["OriginX"] = 10
    cs1.props["OriginY"] = 10
    cs1.props["OriginZ"] = 10

    # Pointing vectors can be changed

    ypoint = [0, -1, 0]
    cs1.props["YAxisXvec"] = ypoint[0]
    cs1.props["YAxisYvec"] = ypoint[1]
    cs1.props["YAxisZvec"] = ypoint[2]








.. GENERATED FROM PYTHON SOURCE LINES 71-74

Rename coordinate system
~~~~~~~~~~~~~~~~~~~~~~~~
Rename the coordinate system.

.. GENERATED FROM PYTHON SOURCE LINES 74-77

.. code-block:: default


    cs1.rename("newCS")





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    True



.. GENERATED FROM PYTHON SOURCE LINES 78-83

Change coordinate system mode
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Use the function ``change_cs_mode`` to change the mode. Options are ``0``
for axis/position, ``1`` for Euler angle ZXZ, and ``2`` for Euler angle ZYZ.
Here ``1`` sets Euler angle ZXZ as the mode.

.. GENERATED FROM PYTHON SOURCE LINES 83-91

.. code-block:: default


    cs1.change_cs_mode(1)

    # In the new mode, these properties can be edited
    cs1.props["Phi"] = "10deg"
    cs1.props["Theta"] = "22deg"
    cs1.props["Psi"] = "30deg"








.. GENERATED FROM PYTHON SOURCE LINES 92-95

Delete coordinate system
~~~~~~~~~~~~~~~~~~~~~~~~
Delete the coordinate system.

.. GENERATED FROM PYTHON SOURCE LINES 95-98

.. code-block:: default


    cs1.delete()





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    True



.. GENERATED FROM PYTHON SOURCE LINES 99-103

Create coordinate system by defining axes
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Create a coordinate system by defining the axes. During creation, you can
specify all coordinate system properties.

.. GENERATED FROM PYTHON SOURCE LINES 103-108

.. code-block:: default


    cs2 = hfss.modeler.create_coordinate_system(
        name="CS2", origin=[1, 2, 3.5], mode="axis", x_pointing=[1, 0, 1], y_pointing=[0, -1, 0]
    )








.. GENERATED FROM PYTHON SOURCE LINES 109-112

Create coordinate system by defining Euler angles
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Create a coordinate system by defining Euler angles.

.. GENERATED FROM PYTHON SOURCE LINES 112-115

.. code-block:: default


    cs3 = hfss.modeler.create_coordinate_system(name="CS3", origin=[2, 2, 2], mode="zyz", phi=10, theta=20, psi=30)








.. GENERATED FROM PYTHON SOURCE LINES 116-121

Create coordinate system by defining view
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Create a coordinate system by defining the view. Options are ``"iso"``,
``"XY"``, ``"XZ"``, and ``"XY"``. Here ``"iso"`` is specified.
The axes are set automatically.

.. GENERATED FROM PYTHON SOURCE LINES 121-124

.. code-block:: default


    cs4 = hfss.modeler.create_coordinate_system(name="CS4", origin=[1, 0, 0], reference_cs="CS3", mode="view", view="iso")








.. GENERATED FROM PYTHON SOURCE LINES 125-130

Create coordinate system by defining axis and angle rotation
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Create a coordinate system by defining the axis and angle rotation. When you
specify the axis and angle rotation, this data is automatically translated
to Euler angles.

.. GENERATED FROM PYTHON SOURCE LINES 130-133

.. code-block:: default


    cs5 = hfss.modeler.create_coordinate_system(name="CS5", mode="axisrotation", u=[1, 0, 0], theta=123)








.. GENERATED FROM PYTHON SOURCE LINES 134-140

Create face coordinate system
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Face coordinate systems are bound to an object face.
First create a box and then define the face coordinate system on one of its
faces. To create the reference face for the face coordinate system, you must 
specify starting and ending points for the axis.

.. GENERATED FROM PYTHON SOURCE LINES 140-147

.. code-block:: default


    box = hfss.modeler.create_box([0, 0, 0], [2, 2, 2])
    face = box.faces[0]
    fcs1 = hfss.modeler.create_face_coordinate_system(
        face=face, origin=face.edges[0], axis_position=face.edges[1], name="FCS1"
    )








.. GENERATED FROM PYTHON SOURCE LINES 148-152

Create face coordinate system centered on face
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Create a face coordinate system centered on the face with the X axis pointing
to the edge vertex.

.. GENERATED FROM PYTHON SOURCE LINES 152-157

.. code-block:: default


    fcs2 = hfss.modeler.create_face_coordinate_system(
        face=face, origin=face, axis_position=face.edges[0].vertices[0], name="FCS2"
    )








.. GENERATED FROM PYTHON SOURCE LINES 158-162

Swap X and Y axes of face coordinate system
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Swap the X axis and Y axis of the face coordinate system. The X axis is the
pointing ``axis_position`` by default. You can optionally select the Y axis.

.. GENERATED FROM PYTHON SOURCE LINES 162-168

.. code-block:: default


    fcs3 = hfss.modeler.create_face_coordinate_system(face=face, origin=face, axis_position=face.edges[0], axis="Y")

    # Axis can also be changed after coordinate system creation
    fcs3.props["WhichAxis"] = "X"








.. GENERATED FROM PYTHON SOURCE LINES 169-174

Apply a rotation around Z axis
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Apply a rotation around the Z axis. The Z axis of a face coordinate system
is always orthogonal to the face. A rotation can be applied at definition.
Rotation is expressed in degrees.

.. GENERATED FROM PYTHON SOURCE LINES 174-180

.. code-block:: default


    fcs4 = hfss.modeler.create_face_coordinate_system(face=face, origin=face, axis_position=face.edges[1], rotation=10.3)

    # Rotation can also be changed after coordinate system creation
    fcs4.props["ZRotationAngle"] = "3deg"








.. GENERATED FROM PYTHON SOURCE LINES 181-185

Apply offset to X and Y axes of face coordinate system
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Apply an offset to the X axis and Y axis of a face coordinate system.
The offset is in respect the face coordinate system itself.

.. GENERATED FROM PYTHON SOURCE LINES 185-194

.. code-block:: default


    fcs5 = hfss.modeler.create_face_coordinate_system(
        face=face, origin=face, axis_position=face.edges[2], offset=[0.5, 0.3]
    )

    # The offset can also be changed after the coordinate system is created.
    fcs5.props["XOffset"] = "0.2mm"
    fcs5.props["YOffset"] = "0.1mm"








.. GENERATED FROM PYTHON SOURCE LINES 195-199

Create coordinate system relative to face coordinate system
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Create a coordinate system relative to a face coordinate system. Coordinate
systems and face coordinate systems interact each other.

.. GENERATED FROM PYTHON SOURCE LINES 199-207

.. code-block:: default


    face = box.faces[1]
    fcs6 = hfss.modeler.create_face_coordinate_system(face=face, origin=face, axis_position=face.edges[0])
    cs_fcs = hfss.modeler.create_coordinate_system(
        name="CS_FCS", origin=[0, 0, 0], reference_cs=fcs6.name, mode="view", view="iso"
    )









.. GENERATED FROM PYTHON SOURCE LINES 208-211

Get all coordinate systems
~~~~~~~~~~~~~~~~~~~~~~~~~~
Get all coordinate systems.

.. GENERATED FROM PYTHON SOURCE LINES 211-216

.. code-block:: default


    css = hfss.modeler.coordinate_systems
    names = [i.name for i in css]
    print(names)





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    ['CS2', 'CS3', 'CS4', 'CS5', 'FCS1', 'FCS2', 'Face_CS_ML71CS', 'Face_CS_LYR348', 'Face_CS_T603TW', 'Face_CS_WL065P', 'CS_FCS']




.. GENERATED FROM PYTHON SOURCE LINES 217-220

Select coordinate system
~~~~~~~~~~~~~~~~~~~~~~~~
Select an existing coordinate system.

.. GENERATED FROM PYTHON SOURCE LINES 220-225

.. code-block:: default


    css = hfss.modeler.coordinate_systems
    cs_selected = css[0]
    cs_selected.delete()





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    True



.. GENERATED FROM PYTHON SOURCE LINES 226-230

Get point coordinate under another coordinate system
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Get a point coordinate under another coordinate system. A point coordinate
can be translated in respect to any coordinate system.

.. GENERATED FROM PYTHON SOURCE LINES 230-237

.. code-block:: default


    hfss.modeler.create_box([-10, -10, -10], [20, 20, 20], "Box1")
    p = hfss.modeler["Box1"].faces[0].vertices[0].position
    print("Global: ", p)
    p2 = hfss.modeler.global_to_cs(p, "CS5")
    print("CS5 :", p2)





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    Global:  [17.9270534084, -1.033513831051, -2.799442176729]
    CS5 : [17.9270534084, -1.7849177846694704, 2.391463117380998]




.. GENERATED FROM PYTHON SOURCE LINES 238-243

Close AEDT
~~~~~~~~~~
After the simulaton completes, you can close AEDT or release it using the
:func:`pyaedt.Desktop.release_desktop` method.
All methods provide for saving the project before closing.

.. GENERATED FROM PYTHON SOURCE LINES 243-246

.. code-block:: default


    if os.name != "posix":
        d.release_desktop()








.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  21.114 seconds)


.. _sphx_glr_download_examples_01-Modeling-Setup_HFSS_CoordinateSystem.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: HFSS_CoordinateSystem.py <HFSS_CoordinateSystem.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: HFSS_CoordinateSystem.ipynb <HFSS_CoordinateSystem.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
