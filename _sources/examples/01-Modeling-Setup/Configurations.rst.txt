
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "examples\01-Modeling-Setup\Configurations.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_examples_01-Modeling-Setup_Configurations.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_examples_01-Modeling-Setup_Configurations.py:


General: configuration files
----------------------------
This example shows how you can use PyAEDT to export configuration files and reuse
them to import in a new project. A configuration file is supported by these apps:

* HFSS
* 2D Extractor and Q3D Extractor
* Maxwell
* Icepak
* Mechanical

The following sections are covered:

* Variables
* Mesh operations (except Icepak)
* Setup and optimetrics
* Material properties
* Object properties
* Boundaries and excitations

When a boundary is attached to a face, the tool tries to match it with a
``FaceByPosition`` on the same object name on the target design. If, for
any reason, this face position has changed or the object name in the target
design has changed, the boundary fails to apply.

.. GENERATED FROM PYTHON SOURCE LINES 29-32

Perform required imports
~~~~~~~~~~~~~~~~~~~~~~~~
Perform required imports from PyAEDT and connect to AEDT.

.. GENERATED FROM PYTHON SOURCE LINES 32-41

.. code-block:: default


    import os
    import tempfile
    import shutil
    from pyaedt import Icepak
    from pyaedt import examples
    from pyaedt import generate_unique_name









.. GENERATED FROM PYTHON SOURCE LINES 42-45

Set non-graphical mode
~~~~~~~~~~~~~~~~~~~~~~
Set non-graphical mode. The default is ``False``.

.. GENERATED FROM PYTHON SOURCE LINES 45-48

.. code-block:: default


    non_graphical = os.getenv("PYAEDT_NON_GRAPHICAL", "False").lower() in ("true", "1", "t")








.. GENERATED FROM PYTHON SOURCE LINES 49-52

Open project
~~~~~~~~~~~~
Download the project, open it, and save it to the temporary folder.

.. GENERATED FROM PYTHON SOURCE LINES 52-68

.. code-block:: default


    project_full_name = examples.download_icepak()

    tmpfold = tempfile.gettempdir()


    temp_folder = os.path.join(tmpfold, generate_unique_name("Example"))
    project_temp_name = os.path.join(temp_folder, "Graphic_Card.aedt")
    if not os.path.exists(temp_folder):
        os.makedirs(temp_folder)
    shutil.copy2(project_full_name, project_temp_name)

    ipk = Icepak(project_temp_name, specified_version="2022.2", new_desktop_session=True, non_graphical=non_graphical)
    ipk.save_project(os.path.join(temp_folder, "Graphics_card.aedt"))
    ipk.autosave_disable()





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    pyaedt info: Logger Started
    pyaedt info: Launching PyAEDT outside AEDT with CPython and PythonNET.
    pyaedt info: AEDT installation Path C:\Program Files\AnsysEM\v222\Win64.
    pyaedt info: Launching AEDT with module PythonNET.
    pyaedt info: Ansoft.ElectronicsDesktop.2022.2 Started with process ID 1500.
    pyaedt info: Logger file D:\Temp\pyaedt20220722_091734.log in use.
    pyaedt info: pyaedt v0.5.9
    pyaedt info: Python version 3.8.10 (tags/v3.8.10:3d8993a, May  3 2021, 11:48:03) [MSC v.1928 64 bit (AMD64)]
    pyaedt info: Project Graphic_Card has been opened.
    pyaedt info: Active Design set to IcepakDesign1
    pyaedt info: Aedt Objects initialized
    pyaedt info: Variable Manager initialized
    pyaedt info: Design Loaded
    pyaedt info: Successfully loaded project materials !
    pyaedt info: Materials Loaded
    pyaedt info: aedt file load time 0.015625476837158203
    pyaedt info: Project Graphics_card Saved correctly

    True



.. GENERATED FROM PYTHON SOURCE LINES 69-72

Create source blocks
~~~~~~~~~~~~~~~~~~~~
Create a source block on the CPU and memmories.

.. GENERATED FROM PYTHON SOURCE LINES 72-76

.. code-block:: default


    ipk.create_source_block("CPU", "25W")
    ipk.create_source_block(["MEMORY1", "MEMORY1_1"], "5W")





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    pyaedt info: Block on ['CPU'] with 25W power created correctly.
    pyaedt info: Block on ['MEMORY1', 'MEMORY1_1'] with 5W power created correctly.

    <pyaedt.modules.Boundary.BoundaryObject object at 0x0000018282A35D30>



.. GENERATED FROM PYTHON SOURCE LINES 77-80

Assign boundaries
~~~~~~~~~~~~~~~~~
Assign the opening and grille.

.. GENERATED FROM PYTHON SOURCE LINES 80-85

.. code-block:: default


    region = ipk.modeler["Region"]
    ipk.assign_openings(air_faces=region.bottom_face_x.id)
    ipk.assign_grille(air_faces=region.top_face_x.id, free_area_ratio=0.8)





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    pyaedt info: Opening Assigned
    pyaedt info: Grille Assigned

    <pyaedt.modules.Boundary.BoundaryObject object at 0x00000182811C17C0>



.. GENERATED FROM PYTHON SOURCE LINES 86-91

Create setup
~~~~~~~~~~~~
Create the setup. With getters and setters, the properties can be set up
from the ``setup`` object. They don't have to perfectly match the property
syntax.

.. GENERATED FROM PYTHON SOURCE LINES 91-99

.. code-block:: default


    setup1 = ipk.create_setup()
    setup1["FlowRegime"] = "Turbulent"
    setup1["Max Iterations"] = 5
    setup1["Solver Type Pressure"] = "flex"
    setup1["Solver Type Temperature"] = "flex"
    ipk.save_project(r"C:\temp\Graphic_card.aedt")





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    pyaedt info: Key FlowRegime matched internal key 'Flow Regime' with confidence of 94.
    pyaedt info: Key Max Iterations matched internal key 'Convergence Criteria - Max Iterations' with confidence of 54.
    pyaedt info: Key Solver Type Pressure matched internal key 'Linear Solver Type - Pressure' with confidence of 80.
    pyaedt info: Key Solver Type Temperature matched internal key 'Linear Solver Type - Temperature' with confidence of 82.
    pyaedt info: Project Graphic_card Saved correctly

    True



.. GENERATED FROM PYTHON SOURCE LINES 100-103

Export project to step file
~~~~~~~~~~~~~~~~~~~~~~~~~~~
Export the current project to the step file.

.. GENERATED FROM PYTHON SOURCE LINES 103-108

.. code-block:: default


    filename = ipk.design_name
    file_path = os.path.join(ipk.working_directory, filename + ".step")
    ipk.export_3d_model(filename, ipk.working_directory, ".step", [], [])





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    True



.. GENERATED FROM PYTHON SOURCE LINES 109-113

Export configuration files
~~~~~~~~~~~~~~~~~~~~~~~~~~
Export the configuration files. You can optionally disable the export and
import sections.

.. GENERATED FROM PYTHON SOURCE LINES 113-117

.. code-block:: default


    conf_file = ipk.configurations.export_config()
    ipk.close_project()





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    pyaedt info: Json file C:/temp/Graphic_card.pyaedt\IcepakDesign1\IcepakDesign1_Q0XNLF.json created correctly.
    pyaedt info: Closing the AEDT Project Graphic_card
    pyaedt info: Project Graphic_card closed correctly

    True



.. GENERATED FROM PYTHON SOURCE LINES 118-121

Create project
~~~~~~~~~~~~~~
Create a new Icepak project and import the step.

.. GENERATED FROM PYTHON SOURCE LINES 121-125

.. code-block:: default


    app = Icepak(projectname="new_proj_Ipk")
    app.modeler.import_3d_cad(file_path)





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    pyaedt info: Project new_proj_Ipk has been created.
    pyaedt info: No design is present. Inserting a new design.
    pyaedt info: Added design 'Icepak_F9L' of type Icepak.
    pyaedt info: Aedt Objects initialized
    pyaedt info: Variable Manager initialized
    pyaedt info: Design Loaded
    pyaedt info: Successfully loaded project materials !
    pyaedt info: Materials Loaded
    pyaedt info: aedt file load time 0.0
    pyaedt info: Step file C:/temp/Graphic_card.pyaedt\IcepakDesign1\IcepakDesign1.step imported

    True



.. GENERATED FROM PYTHON SOURCE LINES 126-130

Import and apply configuration file
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Import and apply the configuration file. You can apply all or part of the
JSON file that you import using options in the ``configurations`` object.

.. GENERATED FROM PYTHON SOURCE LINES 130-135

.. code-block:: default


    out = app.configurations.import_config(conf_file)
    app.configurations.results.global_import_success






.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    pyaedt info: Dataset Ceramic_material_39 doesn't exist.
    pyaedt info: Dataset $Ceramic_material_39 created successfully.
    pyaedt warning: Material Al-Extruded already exists. Renaming to Al-Extruded_IKYXA7
    Material Al-Extruded already exists. Renaming to Al-Extruded_IKYXA7
    pyaedt warning: Material air already exists. Renaming to air_P5BMBH
    Material air already exists. Renaming to air_P5BMBH
    pyaedt warning: Material Ceramic_material already exists. Renaming to Ceramic_material_NPRRYT
    Material Ceramic_material already exists. Renaming to Ceramic_material_NPRRYT
    pyaedt info: Object Properties updated.
    pyaedt info: Boundary Operation CPU added.
    pyaedt info: Boundary Operation MEMORY1 added.
    pyaedt info: Boundary Operation Opening_D4KM64 added.
    pyaedt info: Boundary Operation Grille_AUX6VX added.
    pyaedt info: Setup MySetupAuto added.

    True



.. GENERATED FROM PYTHON SOURCE LINES 136-139

Close project
~~~~~~~~~~~~~
Close the project.

.. GENERATED FROM PYTHON SOURCE LINES 139-142

.. code-block:: default


    if os.name != "posix":
        app.release_desktop()








.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  26.854 seconds)


.. _sphx_glr_download_examples_01-Modeling-Setup_Configurations.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: Configurations.py <Configurations.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: Configurations.ipynb <Configurations.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
