
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "examples\03-Circuit\Reports.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_examples_03-Circuit_Reports.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_examples_03-Circuit_Reports.py:


Circuit: automatic report creation
----------------------------------
This example shows how to use PyAEDT to create reports automatically using a JSON file.

.. GENERATED FROM PYTHON SOURCE LINES 8-11

Perform required imports
~~~~~~~~~~~~~~~~~~~~~~~~
Perform required imports and set the local path to the path for PyAEDT.

.. GENERATED FROM PYTHON SOURCE LINES 11-29

.. code-block:: default


    # sphinx_gallery_thumbnail_path = 'Resources/spectrum_plot.png'
    import os

    import shutil
    from pyaedt import examples
    from pyaedt import generate_unique_name
    import tempfile

    # Set local path to path for PyAEDT
    project_path = examples.download_custom_reports()

    tmpfold = tempfile.gettempdir()
    temp_folder = os.path.join(tmpfold, generate_unique_name("CustomReport"))


    shutil.copytree(project_path, temp_folder)





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    'D:\\Temp\\CustomReport_XOJHIJ'



.. GENERATED FROM PYTHON SOURCE LINES 30-33

Import main classes
~~~~~~~~~~~~~~~~~~~
Import the main classes that are needed: :class:`pyaedt.Desktop` and :class:`pyaedt.Circuit`.

.. GENERATED FROM PYTHON SOURCE LINES 33-37

.. code-block:: default


    from pyaedt import Circuit
    from pyaedt.generic.DataHandlers import json_to_dict








.. GENERATED FROM PYTHON SOURCE LINES 38-41

Launch AEDT
~~~~~~~~~~~
Launch AEDT 2022 R2 in graphical mode. This example uses SI units.

.. GENERATED FROM PYTHON SOURCE LINES 41-44

.. code-block:: default


    desktopVersion = "2022.2"








.. GENERATED FROM PYTHON SOURCE LINES 45-48

Set non-graphical mode
~~~~~~~~~~~~~~~~~~~~~~
Set non-graphical mode. The default is ``False``.

.. GENERATED FROM PYTHON SOURCE LINES 48-52

.. code-block:: default


    non_graphical = os.getenv("PYAEDT_NON_GRAPHICAL", "False").lower() in ("true", "1", "t")
    NewThread = True








.. GENERATED FROM PYTHON SOURCE LINES 53-59

Launch AEDT with Circuit
~~~~~~~~~~~~~~~~~~~~~~~~
Launch AEDT with Circuit. The :class:`pyaedt.Desktop` class initializes AEDT
and starts the specified version in the specified mode. The Boolean
parameter ``NewThread`` defines whether to create a new instance of AEDT or try
to connect to an existing instance of it.

.. GENERATED FROM PYTHON SOURCE LINES 59-63

.. code-block:: default


    cir = Circuit(projectname=os.path.join(temp_folder, 'CISPR25_Radiated_Emissions_Example22R1.aedtz'), non_graphical=non_graphical,
                  specified_version=desktopVersion)





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    pyaedt info: Logger Started
    pyaedt info: Launching PyAEDT outside AEDT with CPython and PythonNET.
    pyaedt info: AEDT installation Path C:\Program Files\AnsysEM\v222\Win64.
    pyaedt info: Launching AEDT with module PythonNET.
    pyaedt info: Ansoft.ElectronicsDesktop.2022.2 Started with process ID 5328.
    pyaedt info: Logger file D:\Temp\pyaedt20220722_091734.log in use.
    pyaedt info: pyaedt v0.5.9
    pyaedt info: Python version 3.8.10 (tags/v3.8.10:3d8993a, May  3 2021, 11:48:03) [MSC v.1928 64 bit (AMD64)]
    pyaedt info: Archive D:\Temp\CustomReport_XOJHIJ\CISPR25_Radiated_Emissions_Example22R1.aedtz has been restored to project Project_2AW
    pyaedt info: Active Design set to CISPR25_Radiated_Emissions_Circuit
    pyaedt info: Aedt Objects initialized
    pyaedt info: Variable Manager initialized
    pyaedt info: Design Loaded
    pyaedt info: Successfully loaded project materials !
    pyaedt info: Materials Loaded
    pyaedt info: aedt file load time 0.6094210147857666




.. GENERATED FROM PYTHON SOURCE LINES 64-71

Create spectrum report
~~~~~~~~~~~~~~~~~~~~~~
Create a spectrum report. You can use a JSON file to create a simple setup
or a fully customized one. The following code creates a simple setup and changes
the JSON file to customize it. In a spectrum report, you can add limitilines and
notes and edit axes, the grid, and the legend. You can create custom reports
in non-graphical mode in AEDT 2022 R2 and later.

.. GENERATED FROM PYTHON SOURCE LINES 71-77

.. code-block:: default


    report1 = cir.post.create_report_from_configuration(os.path.join(temp_folder,'Spectrum_CISPR_Basic.json'))

    if not non_graphical:
        report1_full = cir.post.create_report_from_configuration(os.path.join(temp_folder,'Spectrum_CISPR_Custom.json'))








.. GENERATED FROM PYTHON SOURCE LINES 78-84

Create transient report
~~~~~~~~~~~~~~~~~~~~~~~
Create a transient report. You can read and modify the JSON file
before running the script. The following code modifies the traces
before generating the report. You can create custom reports in non-graphical
mode in AEDT 2022 R2 and later.

.. GENERATED FROM PYTHON SOURCE LINES 84-95

.. code-block:: default


    if non_graphical:
        props = json_to_dict(os.path.join(temp_folder, 'Transient_CISPR_Basic.json'))
    else:
        props = json_to_dict(os.path.join(temp_folder, 'Transient_CISPR_Custom.json'))

    report2 = cir.post.create_report_from_configuration(input_dict=props, solution_name="NexximTransient")
    props["expressions"] = {"V(Battery)": {}, "V(U1_VDD)": {}}
    props["plot_name"] = "Battery Voltage"
    report3 = cir.post.create_report_from_configuration(input_dict=props, solution_name="NexximTransient")








.. GENERATED FROM PYTHON SOURCE LINES 96-101

Create eye diagram
~~~~~~~~~~~~~~~~~~
Create an eye diagram. If the JSON file contains an eye mask, you can create
an eye diagram and fully customize it. You can create custom reports in
non-graphical mode in AEDT 2022 R2 and later.

.. GENERATED FROM PYTHON SOURCE LINES 101-110

.. code-block:: default


    report4 = cir.post.create_report_from_configuration(os.path.join(temp_folder,'EyeDiagram_CISPR_Basic.json'))

    if not non_graphical:
        report4_full = cir.post.create_report_from_configuration(os.path.join(temp_folder,'EyeDiagram_CISPR_Custom.json'))

    if not non_graphical:
        cir.post.export_report_to_jpg(cir.working_directory, report4.plot_name)








.. GENERATED FROM PYTHON SOURCE LINES 111-114

Save project and close AEDT
~~~~~~~~~~~~~~~~~~~~~~~~~~~
Save the project and close AEDT.

.. GENERATED FROM PYTHON SOURCE LINES 114-118

.. code-block:: default


    cir.save_project()
    print("Project Saved in {}".format(cir.project_path))
    cir.release_desktop()




.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    pyaedt info: Project Project_2AW Saved correctly
    Project Saved in D:/Temp/CustomReport_XOJHIJ/

    True




.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  15.980 seconds)


.. _sphx_glr_download_examples_03-Circuit_Reports.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: Reports.py <Reports.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: Reports.ipynb <Reports.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
