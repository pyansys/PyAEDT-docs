
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "examples\03-Circuit\Circuit_Example.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_examples_03-Circuit_Circuit_Example.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_examples_03-Circuit_Circuit_Example.py:


Circuit: schematic creation and analysis
----------------------------------------
This example shows how you can use PyAEDT to create a circuit design
and run a Nexxim time-domain simulation.

.. GENERATED FROM PYTHON SOURCE LINES 8-11

Perform required imports
~~~~~~~~~~~~~~~~~~~~~~~~
Perform required imports.

.. GENERATED FROM PYTHON SOURCE LINES 11-18

.. code-block:: default


    # sphinx_gallery_thumbnail_path = 'Resources/circuit.png'

    from pyaedt import Circuit
    from pyaedt import Desktop
    import os








.. GENERATED FROM PYTHON SOURCE LINES 19-22

Launch AEDT
~~~~~~~~~~~
Launch AEDT 2022 R2 in graphical mode. This example uses SI units.

.. GENERATED FROM PYTHON SOURCE LINES 22-25

.. code-block:: default


    desktop_version = "2022.2"








.. GENERATED FROM PYTHON SOURCE LINES 26-29

Set non-graphical mode
~~~~~~~~~~~~~~~~~~~~~~
Set non-graphical mode. The default is ``False``.

.. GENERATED FROM PYTHON SOURCE LINES 29-33

.. code-block:: default


    non_graphical = os.getenv("PYAEDT_NON_GRAPHICAL", "False").lower() in ("true", "1", "t")
    new_thread = True








.. GENERATED FROM PYTHON SOURCE LINES 34-39

Launch AEDT and Circuit
~~~~~~~~~~~~~~~~~~~~~~~
The :class:`pyaedt.Desktop` class initializes AEDT and starts the specified version in
the specified mode. The Boolean parameter ``new_thread`` defines whether
to create a new instance of AEDT or try to connect to an existing instance of it.

.. GENERATED FROM PYTHON SOURCE LINES 39-43

.. code-block:: default


    desktop = Desktop(desktop_version, non_graphical, new_thread)
    aedt_app = Circuit()





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    pyaedt info: Logger Started
    pyaedt info: Launching PyAEDT outside AEDT with CPython and PythonNET.
    pyaedt info: AEDT installation Path C:\Program Files\AnsysEM\v222\Win64.
    pyaedt info: Launching AEDT with module PythonNET.
    pyaedt info: Ansoft.ElectronicsDesktop.2022.2 Started with process ID 3228.
    pyaedt info: Logger file D:\Temp\pyaedt20220722_091734.log in use.
    pyaedt info: pyaedt v0.5.9
    pyaedt info: Python version 3.8.10 (tags/v3.8.10:3d8993a, May  3 2021, 11:48:03) [MSC v.1928 64 bit (AMD64)]
    pyaedt info: Project Project51 has been created.
    pyaedt info: No design is present. Inserting a new design.
    pyaedt info: Added design 'Circuit Design_2EL' of type Circuit Design.
    pyaedt info: Aedt Objects initialized
    pyaedt info: Variable Manager initialized
    pyaedt info: Design Loaded
    pyaedt info: Successfully loaded project materials !
    pyaedt info: Materials Loaded




.. GENERATED FROM PYTHON SOURCE LINES 44-47

Create circuit setup
~~~~~~~~~~~~~~~~~~~~
Create and customize an LNA (linear network analysis) setup.

.. GENERATED FROM PYTHON SOURCE LINES 47-51

.. code-block:: default


    setup1 = aedt_app.create_setup("MyLNA")
    setup1.props["SweepDefinition"]["Data"] = "LINC 0GHz 4GHz 10001"








.. GENERATED FROM PYTHON SOURCE LINES 52-55

Create components
~~~~~~~~~~~~~~~~~
Create components, such as an inductor, resistor, and capacitor.

.. GENERATED FROM PYTHON SOURCE LINES 55-60

.. code-block:: default


    inductor = aedt_app.modeler.schematic.create_inductor("L1", 1e-9, [0, 0])
    resistor = aedt_app.modeler.schematic.create_resistor("R1", 50, [0.0254, 0])
    capacitor = aedt_app.modeler.schematic.create_capacitor("C1", 1e-12)








.. GENERATED FROM PYTHON SOURCE LINES 61-64

Get all pins
~~~~~~~~~~~~
Get all pins of a specified component.

.. GENERATED FROM PYTHON SOURCE LINES 64-68

.. code-block:: default


    pins_resistor = resistor.pins









.. GENERATED FROM PYTHON SOURCE LINES 69-72

Create port and ground
~~~~~~~~~~~~~~~~~~~~~~
Create a port and a ground, which are needed for the circuit analysis.

.. GENERATED FROM PYTHON SOURCE LINES 72-76

.. code-block:: default


    port = aedt_app.modeler.components.create_interface_port("myport")
    gnd = aedt_app.modeler.components.create_gnd()








.. GENERATED FROM PYTHON SOURCE LINES 77-80

Connect components
~~~~~~~~~~~~~~~~~~
Connect components with wires.

.. GENERATED FROM PYTHON SOURCE LINES 80-86

.. code-block:: default


    port.pins[0].connect_to_component(inductor.pins[0])
    inductor.pins[1].connect_to_component(resistor.pins[0])
    resistor.pins[1].connect_to_component(capacitor.pins[0])
    capacitor.pins[1].connect_to_component(gnd.pins[0])





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    True



.. GENERATED FROM PYTHON SOURCE LINES 87-90

Create transient setup
~~~~~~~~~~~~~~~~~~~~~~
Create a transient setup.

.. GENERATED FROM PYTHON SOURCE LINES 90-95

.. code-block:: default


    setup2 = aedt_app.create_setup("MyTransient", aedt_app.SETUPS.NexximTransient)
    setup2.props["TransientData"] = ["0.01ns", "200ns"]
    setup3 = aedt_app.create_setup("MyDC", aedt_app.SETUPS.NexximDC)








.. GENERATED FROM PYTHON SOURCE LINES 96-99

Solve transient setup
~~~~~~~~~~~~~~~~~~~~~
Solve the transient setup.

.. GENERATED FROM PYTHON SOURCE LINES 99-105

.. code-block:: default


    aedt_app.analyze_setup("MyLNA")

    aedt_app.export_fullwave_spice()






.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    pyaedt info: Solving design setup MyLNA
    pyaedt info: Design setup MyLNA solved correctly
    pyaedt info: FullWaveSpice correctly exported to D:/Project/Project51.pyaedt\Circuit Design_2EL\Circuit Design_2EL.sp

    'D:/Project/Project51.pyaedt\\Circuit Design_2EL\\Circuit Design_2EL.sp'



.. GENERATED FROM PYTHON SOURCE LINES 106-109

Create report
~~~~~~~~~~~~~
Create a report that plots solution data.

.. GENERATED FROM PYTHON SOURCE LINES 109-116

.. code-block:: default


    solutions = aedt_app.post.get_solution_data(
        expressions=aedt_app.get_traces_for_plot(category="S"),
    )
    fig = solutions.plot()





.. image-sg:: /examples/03-Circuit/images/sphx_glr_Circuit_Example_001.png
   :alt: Simulation Results Plot
   :srcset: /examples/03-Circuit/images/sphx_glr_Circuit_Example_001.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    pyaedt info: Solution Data Correctly Loaded.




.. GENERATED FROM PYTHON SOURCE LINES 117-122

Close AEDT
~~~~~~~~~~
After the simulation completes, you can close AEDT or release it using the
:func:`pyaedt.Desktop.force_close_desktop` method.
All methods provide for saving the project before closing.

.. GENERATED FROM PYTHON SOURCE LINES 122-125

.. code-block:: default


    if os.name != "posix":
        desktop.release_desktop()








.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  34.145 seconds)


.. _sphx_glr_download_examples_03-Circuit_Circuit_Example.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: Circuit_Example.py <Circuit_Example.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: Circuit_Example.ipynb <Circuit_Example.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
